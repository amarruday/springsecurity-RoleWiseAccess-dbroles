package com.springsecuritydemo.entity;import java.sql.Timestamp;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.FetchType;import javax.persistence.GeneratedValue;import javax.persistence.GenerationType;import javax.persistence.Id;import javax.persistence.JoinColumn;import javax.persistence.ManyToOne;import javax.persistence.Table;import org.hibernate.annotations.CreationTimestamp;import org.hibernate.annotations.UpdateTimestamp;import org.springframework.data.annotation.CreatedDate;@Entity@Table(name="user_roles")public class UserRole {    @Id    @GeneratedValue(strategy = GenerationType.AUTO)    @Column(name="user_role_id")    private Long userRoleId;    @ManyToOne(fetch = FetchType.EAGER)    @JoinColumn(name="user_id")    private User user;    @ManyToOne    @JoinColumn(name="role_id")    private Role role;        @CreationTimestamp    private Timestamp createdDate;        @UpdateTimestamp    private Timestamp updateDate;    	public Long getUserRoleId() {		return userRoleId;	}	public void setUserRoleId(Long userRoleId) {		this.userRoleId = userRoleId;	}	public User getUser() {		return user;	}	public void setUser(User user) {		this.user = user;	}	public Role getRole() {		return role;	}	public void setRole(Role role) {		this.role = role;	}		public Timestamp getCreatedDate() {		return createdDate;	}	public void setCreatedDate(Timestamp createdDate) {		this.createdDate = createdDate;	}	public Timestamp getUpdateDate() {		return updateDate;	}	public void setUpdateDate(Timestamp updateDate) {		this.updateDate = updateDate;	}	public UserRole() {		super();		// TODO Auto-generated constructor stub	}	public UserRole(Long userRoleId, User user, Role role) {		super();		this.userRoleId = userRoleId;		this.user = user;		this.role = role;	}	@Override	public String toString() {		return "UserRole [userRoleId=" + userRoleId + ", user=" + user.getUsername() + ", role=" + role.getrolename();	}		}